{"version":3,"sources":["components/logo/logo.png","components/navigation/Navigation.js","components/signin/Signin.js","components/register/Register.js","components/logo/Logo.js","components/facerecognition/FaceRecognition.js","components/imagelinkform/ImageLinkForm.js","components/rank/Rank.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","_ref","onRouteChange","isSignedIn","react_default","a","createElement","style","display","justifyContent","onClick","className","Signin","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","Content-Type","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","htmlFor","onChange","type","name","React","Component","Register","onNameChange","Logo","tilt_default","options","max","height","width","paddingTop","src","logo","alt","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","ImageLinkForm","onInputChange","onSubmit","Rank","entries","concat","particlesOptions","particles","number","density","enable","value_area","initalState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","assign","catch","err","console","log","_this$state","particles_default","params","navigation_Navigation","components_logo_Logo","rank_Rank","components_imagelinkform_ImageLinkForm","components_facerecognition_FaceRecognition","signin_Signin","register_Register","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f39e16b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ff8a4ad9.png\";","import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n        if (isSignedIn) {\r\n            return (\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signout')} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\r\n            </nav>\r\n            );\r\n        } else {\r\n            return (\r\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                    <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n                    <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n                </nav>\r\n            );   \r\n        }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nclass Signin extends React.Component { \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail: '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/signin', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home')\r\n            }\r\n        })\r\n       \r\n    }\r\n\r\n    render() {\r\n        const { onRouteChange } = this.props;\r\n        return (\r\n                <article className=\"br3 shadow-5 ba b--black-10 w-100 w-50-m w-25-l center\">\r\n                    <main className=\"pa4 black-80\">\r\n                        <div className=\"measure\">\r\n                            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0 center\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input onChange={this.onEmailChange}className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input onChange={this.onPasswordChange}\r\n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                            </div>\r\n                            </fieldset>\r\n                            <div className=\"\">\r\n                            <input\r\n                            onClick={this.onSubmitSignIn}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"button\"\r\n                            value=\"Sign in\"\r\n                            />\r\n                            </div>\r\n                            <div className=\"lh-copy mt3\">\r\n                            <p \r\n                            onClick={() => onRouteChange('register')}\r\n                            className=\"f6 link dim black db pointer\">Register</p>            \r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </article> \r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: ''\r\n        }\r\n    }\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('http://localhost:3000/register', {\r\n            method: 'post',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange('home')\r\n            }\r\n        })\r\n       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <article className=\"br3 shadow-5 ba b--black-10 w-100 w-50-m w-25-l center\">\r\n                    <main className=\"pa4 black-80\">\r\n                        <div className=\"measure\">\r\n                            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 mh0 center\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                                <input onChange={this.onNameChange}className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input onChange={this.onEmailChange}className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                                <input onChange={this.onPasswordChange}className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                            </div>\r\n                            </fieldset>\r\n                            <div className=\"\">\r\n                            <input\r\n                            onClick={this.onSubmitSignIn}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"button\"\r\n                            value=\"Register\"\r\n                            />\r\n                            </div>\r\n                        </div>\r\n                    </main>\r\n                </article> \r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport logo from './logo.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className='ma4 mt0'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner pa3\">\r\n                    <img style={{paddingTop: '2px'}} src={logo} alt='logo' />\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );      \r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n            <img id='inputimage' src={imageUrl} alt='' width='500px' height='auto'/>\r\n            <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className='f3'>\r\n                {'This Magic Brain will detect faces in your picture. Git it a try.'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='pa4 br3 shadow-5 form center'>\r\n                    <input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple' onClick={onSubmit}>Detect</button>\r\n                </div>  \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm;","import React from 'react';\r\n\r\nconst Rank = ({name, entries}) => {\r\n    return (\r\n        <div>\r\n            <div className='white f3'>\r\n                {`${name}, your current entry rank is...`}\r\n            </div>\r\n            <div className='white f1'>\r\n                {entries}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rank;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/navigation/Navigation';\nimport Signin from './components/signin/Signin';\nimport Register from './components/register/Register';\nimport Logo from './components/logo/Logo';\nimport FaceRecognition from './components/facerecognition/FaceRecognition';\nimport ImageLinkForm from './components/imagelinkform/ImageLinkForm';\nimport Rank from './components/rank/Rank';\nimport './App.css';\n\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initalState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        email: '',\n        id: '',\n        name: '',\n        entries: 0,\n        joined: ''      \n      }\n}\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        email: '',\n        id: '',\n        name: '',\n        entries: 0,\n        joined: ''      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({ \n      user: {\n        email: data.email,\n        id: data.id,\n        name: data.name,\n        entries: data.entries,\n        joined: data.joined   \n      }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    fetch('http://localhost:3000/imageurl', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                input: this.state.input\n            })\n          })\n      .then(response => response.json())\n      .then(response => {\n        if(response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.user.id\n            })\n          })\n          .then(response => response.json())\n          .then(count => {\n            this.setState(Object.assign(this.state.user, {entries: count}))\n          })\n          .catch(err => console.log)\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initalState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n          ? \n          <div> \n          <Logo />\n          <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n          <ImageLinkForm\n            onInputChange={this.onInputChange}\n            onSubmit={this.onSubmit}\n          />\n          <FaceRecognition box={box} imageUrl={imageUrl}/>\n        </div>          \n          : (\n              route === 'signin'\n              ?  <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n              :   <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          ) \n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}